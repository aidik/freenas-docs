#!/usr/bin/env perl

use strict;
use warnings;

use File::Basename;
use Getopt::Std;
use Scalar::Util qw(looks_like_number);

our ($opt_h, $opt_t, $opt_r);

our $prolog = <<PROLOG;
  <!-- googlize start -->
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-2174408-18"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-2174408-18');
  </script>
  <script src="/documentation/js/jquery-3.3.1.min.js"></script>
  <script src="/documentation/js/lodash-4.17.11.min.js"></script>
  <script src="/documentation/js/jquery.selectric-1.13.0.min.js"></script>
  <script>
    var jQuery_dvsx = jQuery.noConflict(true);
    var lodash_dvsx = _.noConflict();
  </script>
  <script src="/documentation/js/googlize.min.js"></script>
  <link rel="stylesheet" href="/documentation/css/jquery.selectric-1.13.0.css">
  <link href="https://fonts.googleapis.com/css?family=Roboto:400,400i,700&amp;subset=latin-ext" rel="stylesheet">
  <!-- googlize end -->
PROLOG

our $epilog = <<EPILOG;
  <!-- googlize button start -->
  <div id="float-box">
    <div id="float-header">
      <span id="current-version">loading...</span>
      <span id="float-toggle"></span>
    </div>
    <div id="expanded-float">
      <span class="float-title">Other versions:</span>
      <select id="version" name="version">
      </select>

      <div id="notstable">
      </div>

      <span class="float-title">Documentation:</span>
      <div id="format">
      </div>

      <span class="float-title">Other:</span>
      <div id="link">
      </div>
    </div>
  </div>
  <script>
    jQuery_dvsx(document).ready(function() {
      jQuery_dvsx("#float-box").css({"top": "%%TOP%%px", "right": "%%RIGHT%%px"});
  });
  </script>
  <!-- googlize button end -->
EPILOG

our $prog = basename($0);

sub usage {
    print <<USAGE;
usage: $prog -h
       $prog [-t topcoord] [-r topcoord] [list of HTML files]

    -h  show summary of command line options and exit
    -t  top coordinate of Documentation Version Selector Box
    -r  right coordinate of Documentation Version Selector Box

$prog rewrites HTML files, inserting JS & CSS references and
Google Analytics code at </head> and a floating Documentation
Version Selector Box at </body>. $prog can be run multiple times
on an HTML file. If the added code is already present, it is
replaced, not added again.

A top and right coordinate for the Selector Box can be specified
with -t and -r respectively. This makes it possible to place
the Selector Box farther away from the borders of the page to
avoid overlaying navigation buttons. The default value for both is zero.

Basic Example:

    ./$prog -t25 -r25 processed/_build/html/*.html

Recursive Example:

    find documentation/builds/ -type f -iname "*.html" | xargs perl googlize.pl -t20 -r20
USAGE
    exit ;
}

sub read_file {
    my $fname = shift;
    open my $fh, '<', $fname or die "cannot open '$fname':$!\n";
    my $content = do { local($/); <$fh> };
    close $fh or die "could not close file:$!\n";
    return $content;
}

sub write_file {
    my ($fname, $content) = @_;
    open my $fh, ">", $fname or die "could not write '$fname':$!\n";
    print $fh $content;
    close $fh or die "could not close '$fname':$!\n";
}

getopts('ht:r:');
usage() if $opt_h;

$opt_t = 0 unless defined($opt_t);
die '** -t argument (top coordinate) must be a number' unless (looks_like_number($opt_t));
$epilog =~ s/%%TOP%%/$opt_t/;

$opt_r = 0 unless defined($opt_r);
die '** -r argument (top coordinate) must be a number' unless (looks_like_number($opt_r));
$epilog =~ s/%%RIGHT%%/$opt_r/;

# main loop
foreach my $fname (@ARGV) {
    my $html = read_file($fname);

    print "$fname -";
    if ( $html =~ /<!-- prevent googlize -->/ ) {
        print " Googlification prevented!";
        print "\n";
        next;
    }
    print " Header links & GA code ";
    if ( $html =~ /<!-- googlize start -->/ ) {
        print "replaced";
        $html =~ s%  <!-- googlize start -->.*<!-- googlize end -->\s+</head>%$prolog</head>%gsi;
    } else {
        print "installed";
        $html =~ s%</head>%$prolog</head>%gsi;
    }
    print ", Bottom code ";
    if ( $html =~ /<!-- googlize button start -->/ ) {
        print "replaced";
        $html =~ s%  <!-- googlize button start -->.*<!-- googlize button end -->\s+</body>%$epilog</body>%gsi;
    } else {
        print "installed";
        $html =~ s%</body>%$epilog</body>%gsi;
    }
    print "\n";

    write_file($fname, $html);
}
